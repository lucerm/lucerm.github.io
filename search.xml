<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>hexo博客怎么写</title>
    <url>/2019/10/31/hexo%E5%8D%9A%E5%AE%A2%E6%A8%A1%E6%9D%BF/</url>
    <content><![CDATA[<h1 id="直接来这复制上面的头部文件"><a href="#直接来这复制上面的头部文件" class="headerlink" title="****直接来这复制上面的头部文件****"></a><strong>****</strong>直接来这复制上面的头部文件****</h1><h1 id="hexo博客有什么？"><a href="#hexo博客有什么？" class="headerlink" title="**hexo博客有什么？****"></a><strong><strong><strong>**</strong></strong></strong>hexo博客有什么？<strong>****</strong></h1><p><code>注意事项：编写标签分类等不要在typora</code></p>
<p>1、首页  ： 这个不需要设置<br>断页</p>
<h4 id="“”"><a href="#“”" class="headerlink" title="//“”"></a>//“<a id="more"></a>”</h4><p>2、关于： 本人或博客相关的介绍</p>
<p>3、标签： 标签<code>tages</code>记得换行并加<code>-</code></p>
<p>4、分类： 分类categories</p>
]]></content>
      <categories>
        <category>模板</category>
      </categories>
      <tags>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>修改Indigo文章页面宽度</title>
    <url>/2019/10/30/%E4%BF%AE%E6%94%B9Indigo%E6%96%87%E7%AB%A0%E9%A1%B5%E9%9D%A2%E5%AE%BD%E5%BA%A6/</url>
    <content><![CDATA[<h1 id="本博客一直在使用indigo作为我们的模板-但是现在发现了一个问题-正文的宽度太小了-有时候无法看全代码"><a href="#本博客一直在使用indigo作为我们的模板-但是现在发现了一个问题-正文的宽度太小了-有时候无法看全代码" class="headerlink" title="本博客一直在使用indigo作为我们的模板. 但是现在发现了一个问题: 正文的宽度太小了, 有时候无法看全代码!"></a>本博客一直在使用indigo作为我们的模板. 但是现在发现了一个问题: 正文的宽度太小了, 有时候无法看全代码!</h1><p>发现indigo的GitHub上面也有人问了同样的问题: <a href="https://github.com/yscoder/hexo-theme-indigo/issues/279" target="_blank" rel="noopener">地址</a>.</p>
<p>我给了一个比较不完美的解决方法:</p>
<a id="more"></a>
<blockquote>
<p>我也有这个问题, 我把<code>hexo-theme-indigo/layout/page.ejs</code>和<code>hexo-theme-indigo/layout/post.ejs</code>中的``标签加上了<code>style=&quot;width: 1000px;&quot;</code>, 但是这样的话, 手机上看就会不能自适应…</p>
</blockquote>
<p>可能把帖子顶起来了, 有人在下面贴出了完美的解决方法:</p>
<p>(1) 把<code>hexo-theme-indigo/source/css/_partial/variable.less</code>中的<code>@contentWidth: 960px;</code>改成<code>@contentWidth: 90%;</code>, 当然这个大小是自己可调的, 我调成了80%(效果就是本页面显示的样子).</p>
<p>(2) 修改config文件, 将<code>cdn</code>设置为<code>false</code>, 关闭CDN加速.</p>
<p>(3) 执行<code>hexo clean</code>命令清空缓存, 再去执行<code>hexo g</code>重新构建发布.</p>
]]></content>
      <categories>
        <category>解决问题</category>
      </categories>
      <tags>
        <tag>Github</tag>
        <tag>问题</tag>
      </tags>
  </entry>
  <entry>
    <title>GitHub搭建hexo博客</title>
    <url>/2019/10/30/GitHub%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h1 id="1-首先，得在GitHub上有个自己的仓库"><a href="#1-首先，得在GitHub上有个自己的仓库" class="headerlink" title="1.首先，得在GitHub上有个自己的仓库"></a><strong>1.首先，得在GitHub上有个自己的仓库</strong></h1><p>这个默认都有点了，没有的百度网上很多教程如何创建GitHub，并创建GitHub.io库</p><a id="more"></a>
<h1 id="2-环境搭建"><a href="#2-环境搭建" class="headerlink" title="2.环境搭建"></a>2.环境搭建</h1><h2 id="2-1-首先，我们需要下载node-js和git-安装基本上就是默认安装即可。"><a href="#2-1-首先，我们需要下载node-js和git-安装基本上就是默认安装即可。" class="headerlink" title="　2.1 首先，我们需要下载node.js和git.安装基本上就是默认安装即可。"></a>　<strong>2.1 首先，我们需要下载<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">node.js</a>和<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">git</a>.安装基本上就是默认安装即可。</strong></h2><p> 安装，完成之后，打开命令窗口（Win+R，输入CMD，回车），分别输入node -v, npm -v, git -version, 如果都能像下图一样返回版本号就说明安装好了。 </p>
<p><img src="/images/1228928-20171210164556943-1814058239.png" alt="img"></p>
<p> 　如果在这里不可以操作git，说明在安装时没有更改路径，设置为windows环境下也可以操作，不过没有关系，只需要将git的安装路径添加到环境变量中就可以在windows下操作，或者我们可以运行git bash，在这里查看git的版本号（安装git之后一定会生成git bash）， </p>
<p><img src="/images/1228928-20171210165330443-675669731.png" alt="img"></p>
<h2 id="2-2-SSH授权"><a href="#2-2-SSH授权" class="headerlink" title="2.2 SSH授权"></a><strong>2.2 SSH授权</strong></h2><p> 打开git bash，输入ssh-keygen -t rsa, 接着回车三下 </p>
<p><img src="/images/1228928-20171210170029599-1633314112.png" alt="img"></p>
<p> 这样就会在C盘用户目录下生成id_rsa和id_rsa.pub这两个文件，前者是密钥，后者是公钥，用记事本打开id_rsa.pub，复制其中的全部内容，添加到GitHub上，这样本地的id_rsa密钥就可以和GitHub上的id_rsa.pub公钥进行配对，授权成功。 </p>
<p><img src="/images/1228928-20171210171603958-1209919722.jpg" alt="img"></p>
<p> 　SSH key添加之后，就可以在本机git bash中进行测试，输入ssh -T <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>进行测试， </p>
<p><img src="/images/1228928-20171210171822615-599279373.png" alt="img"></p>
<p> 返回Hi username ！You’ve successfully ……说明你已经成功啦！ </p>
<h1 id="3-设置本地博客的配置"><a href="#3-设置本地博客的配置" class="headerlink" title="3. 设置本地博客的配置"></a><strong>3. 设置本地博客的配置</strong></h1><h2 id="3-1-安装hexo"><a href="#3-1-安装hexo" class="headerlink" title="3.1 安装hexo"></a><strong>3.1 安装hexo</strong></h2><p> 在任意一个地方新建一个文件夹，在git bash中进入这个文件夹，比如<strong>cd /d/Files/hexo/</strong>（之后安装的内容会保存在这个文件夹内），输入npm install -g hexo安装hexo即可，如下图（我已经安装过了，就不再安装了） </p>
<p><img src="/images/1228928-20171210182333536-1195927792-1572422355814.png" alt="img"></p>
<p>　　注意，在回车之后，可能会出现一行WARN的警告语句，不用管它，什么都不要按，等着。。。过一段时间如果出现hexo版本号之类的语句就代表差不多了。</p>
<p>　　然后输入<strong>npm install hexo –save</strong>这个时候你会看到命令行出现了一堆白字，紧接着输入<strong>hexo v</strong>查看是否安装成功</p>
<p><img src="../images/1228928-20171210183151240-99873930.png" alt="img"></p>
<p>如果有问题可以输入 <code>rm -rf *</code></p>
<h2 id="3-2-初始化hexo"><a href="#3-2-初始化hexo" class="headerlink" title="3.2 初始化hexo"></a><strong>3.2 初始化hexo</strong></h2><p> 继续输入<strong>hexo init</strong>实现初始化 </p>
<p><img src="../images/1228928-20171210183456005-32633990.png" alt="img"></p>
<p> 下载好了，再输入<strong>hexo s</strong> </p>
<p><img src="../images/1228928-20171210183535708-1122679544.png" alt="img"></p>
<p> 　这时候我们就可以打开浏览器了，在地址栏中输入<a href="http://localhost:4000/，我们就可以看到如下图的界面，，我们的博客建成功啦！！！" target="_blank" rel="noopener">http://localhost:4000/，我们就可以看到如下图的界面，，我们的博客建成功啦！！！</a> <img src="../images/1228928-20171210184948630-1789119677.png" alt="img"></p>
<p> 我们可以去看一下我们的源码的位置，就在之前新建的那个文件夹里，在source-&gt;_posts文件夹下，有一篇helloworld的初始化文章，如果想要添加新的文章，可以在命令行输入hexo new ‘filename’,就会生成一个新的.md文件，对它编辑就可以了。 </p>
<h2 id="3-3-上传项目"><a href="#3-3-上传项目" class="headerlink" title="3.3 上传项目"></a><strong>3.3 上传项目</strong></h2><p>　先打开配置文档_config.yml，对它做如下修改，repository后面的内容是 <strong><a href="mailto:git@gitbub.com" target="_blank" rel="noopener">git@gitbub.com</a>:username/库地址</strong> 的形式</p>
<p>　　注意：type、repository、branch冒号的后面都有一个空格</p>
<p><img src="../images/1228928-20171210192358427-1680463018.png" alt="img"></p>
<p>部署好之后，我们就可以上传我们的代码咯</p>
<p>　　回到命令行窗口，输入<strong>npm install hexo-deployer-git –save,</strong></p>
<p>　　再输入<strong>hexo g，</strong>然后再<strong>hexo d</strong>，就可以将我们public里面的代码上传咯，在GitHub上可以看到我们上传的代码。这样别人也可以通过域名访问我们博客了。在地址栏输入http://域名就可以访问。</p>
<h2 id="4-更改主题"><a href="#4-更改主题" class="headerlink" title="4. 更改主题"></a><strong>4. 更改主题</strong></h2><p> 在hexo官网上下载自己喜欢的theme，点击图片可以预览主题，点击图片下面的文字就可以打开下载链接， </p>
<p><img src="../images/1228928-20171210185231005-181364419.png" alt="img"></p>
<p><img src="../images/1228928-20171210185450849-1458855632.png" alt="img"></p>
<p> 复制源码的url，在git hash 命令窗口下载主题，输入<strong>git clone url</strong>，注意得手动粘贴，Ctrl+v无效， </p>
<p> 　接着，将配置文件中的theme改为新的主题的名字，记住一定要将下载下来的文件夹放到themes文件夹里！ </p>
<p><img src="../images/1228928-20171210193756974-743203692.jpg" alt="img"></p>
<p>#网上资源结合自身情况</p>
<p>#美化那些后面继续写</p>
<p>#</p>
]]></content>
      <categories>
        <category>网站</category>
      </categories>
      <tags>
        <tag>Github</tag>
        <tag>博客</tag>
      </tags>
  </entry>
</search>
